// Usage: 'ml all' to lite all minerals
// 		  'ml on/off' to enable or disable script
// 		  'ml show' to show selected minerals
// 		  'ml add ruby diamond basalt' to set(replace) minerals
//		  'mp bell' toggle bell


/* TODO:
 * make script read loc from desc
 * Loc:    Untamed Highlands [330,344]
*/


SCRIPT_NAME = "lite_mineral";                                                                                    
SCRIPT_DESC = "Lite minerals";                                                                              
SCRIPT_OFF = false;

import java.util.*; 
import java.util.regex.Matcher;
import java.util.regex.Pattern;

// Info color
yellow = new Color[]{new Color(255,255,0)};

boolean bell = false;
boolean enabled = true;
//boolean checkCoords = false;

String result = "";

Pattern pattern = Pattern.compile("(deposit|abyss|lode|graveyard|protrusion|slab|crag|gloss|hill) of ([a-z]+)");

List minerals = new ArrayList();
minerals.add("all");

static checkMatch(){

	// Get full desctription
	String desc = vars.get(0);
	
	// Remove linebreaks and replace multiple spaces with single space
	desc = desc.replace("\n", "").replace("\r", "").replaceAll(" +", " ");

	// Stop if match is tell or similar
	if ( desc.contains("tells you") || desc.contains("You tell") ) { return; }

	Matcher matcher = pattern.matcher(desc);

	if (matcher.find()) {
		result = matcher.group(2);

		if ( minerals.get(0).equals("all") ) {
			getLocation();
		} else {
			for	( String mineral : minerals ) {
				if (mineral.equals(result)) { getLocation(); }
			}
		}
	}
}

void getLocation(){

	clientGUI.doCommand( "/trigenable MineralGetCoordinate" );
	
//	checkCoords=true;
	clientGUI.doCommand( "@@whereami" );

}

void showLites() {

	if (enabled == true ) {
		clientGUI.printText("general", "Script enabled.\n", "#FFFF00");
	} else {
		clientGUI.printText("general", "Script disabled.\n", "#FFFF00");
	}

	if (bell == true ) {
		clientGUI.printText("general", "Bell: on\n", "#FFFF00");
	} else {
		clientGUI.printText("general", "Bell: off\n", "#FFFF00");
	}

	clientGUI.printText("general", "Now liting: " + minerals.toString() + "\n", "#FFFF00");
}

void printInfo() {

    if (bell == true ) {
        clientGUI.doCommand("/bell");
    }

//	if (checkCoords == true ) { 
		String cont = vars.get(2);
		int	coordX = Integer.parseInt( vars.get(3) );
		int	coordY = Integer.parseInt( vars.get(4) );

	//clientGUI.printText("general", "Coords: " + cont + " at " +coordX+","+coordY+"\n", "#FFFF00");

	clientGUI.printText("general", "FOUND " + result + "! " + cont + " X:" + coordX + " Y:" + coordY +"\n", "#FFFF00");
		clientGUI.doCommand( "/trigdisable MineralGetCoordinate" );
//		checkCoords = false;
//	}

}

void turnOff() {
	clientGUI.doCommand( "/trigdisable matcherMineral" );
	enabled = false;
}

void turnOn() {
	clientGUI.doCommand( "/trigenable matcherMineral" );
	enabled = true;
}

public String processCommand()Â {

    if ( command.startsWith("ml add") ) {
        minerals.clear();

        String[] args = command.replace("ml add ", "").split(" ");
        
		// Go through arguments and add to minerals
		for (mineral : args) {
			minerals.add(mineral);		
		}		
	    clientGUI.printText("general", "Now liting: " + minerals.toString() + "\n", "#FFFF00");
		turnOn();
        return null;
    } else if (command.equals("ml show")) {
        showLites();
        return null;
    } else if (command.equals("ml off")) {
        clientGUI.printText("general", "Mineral lite disabled.\n", "#FFFF00");
        turnOff();
        return null;
    } else if (command.equals("ml on")) {
        clientGUI.printText("general", "Mineral lite enabled.\n", "#FFFF00");
        turnOn();
        return null;
    } else if (command.equals("ml bell")) {
		if ( bell == false ) { 
			bell = true; 
            clientGUI.printText("general", "Bell on.\n", "#FFFF00");
		} else { 
            clientGUI.printText("general", "Bell off.\n", "#FFFF00");
			bell = false; 
		}
        return null;
    } else {
        return command;
    }   
}

void bootup() {

	triggerManager.newTrigger("MineralGetCoordinate",
		"^You are in \\'(.*) on the continent of ([A-Za-z]*)\\. \\(Coordinates\\: ([0-9]*)x, ([0-9]*)y",
		"$"+SCRIPT_NAME+".printInfo", true, false, false, null, Font.PLAIN );	

	// Disable whereami trigger as it should be used only when mineral is found
	clientGUI.doCommand( "/trigdisable MineralGetCoordinate" );

    triggerManager.newTrigger("matcherMineral",
        "(deposit |abyss |lode |graveyard |protrusion |slab |crag |gloss |hill )",
        "$"+SCRIPT_NAME+".checkMatch", false, false, true, yellow, Font.PLAIN);

    turnOff();
}

